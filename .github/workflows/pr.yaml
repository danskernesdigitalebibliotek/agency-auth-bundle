on:
  pull_request:
  schedule:
    # “At 04:44 on Saturday.”
    - cron: '44 4 * * 6'
name: Test & Code Style Review
jobs:

  test-composer-install:
    name: Validate composer (${{ matrix.php}}) / (${{ matrix.dependency-version}})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1' ]
        dependency-version: [ 'prefer-stable' ]
    steps:
      - uses: actions/checkout@master

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ matrix.dependency-version }}-
          restore-keys: ${{ runner.os }}-composer-${{ matrix.dependency-version }}-

      - name: Validate composer files
        run: composer validate composer.json --strict

      - name: Install dependencies
        run: |
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

  unit-tests:
    name: Unit tests (${{ matrix.php }}) / (${{ matrix.dependency-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1' ]
        dependency-version: [ prefer-lowest, prefer-stable ]
    steps:
      - uses: actions/checkout@master

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php}}
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ matrix.dependency-version }}-
          restore-keys: ${{ runner.os }}-composer-${{ matrix.dependency-version }}-

      - name: Install dependencies
        run: |
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction

      - name: Unit tests
        run: ./vendor/bin/simple-phpunit --coverage-clover=coverage/unit.xml

      - name: Upload coverage to Codecov test
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/unit.xml
          flags: unittests, ${{ matrix.php }}, ${{ matrix.dependency-version }}
          fail_ci_if_error: false
          verbose: true

  phpcsfixer:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1' ]
    name: Coding style fixer (${{ matrix.php }})
    steps:
      - uses: actions/checkout@master

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extension: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: phpcsfixerr
        run: composer actions/phpcsfixer

  psalm:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1' ]
    name: Psalm (${{ matrix.php }})
    steps:
      - uses: actions/checkout@master

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extension: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.php }}-composer-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: phpcsfixerr
        run: php vendor/bin/psalm

  markdownlint:
    name: Markdown Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn packages
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Yarn install
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - run: yarn install
      - name: markdownlint
        run: yarn markdownlint README.md
